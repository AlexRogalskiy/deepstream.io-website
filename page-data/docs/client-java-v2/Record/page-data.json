{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/client-java-v2/Record/","webpackCompilationHash":"0f3352f8274dbe1392d8","result":{"data":{"markdownRemark":{"html":"<p>This class represents a single record - an observable dataset returned by <a href=\"./RecordHandler#getRecord(recordName)\"><code>client.record.getRecord(recordName)</code></a></p>\n<p>{{>glossary record=true}}</p>\n<div></div>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"boolean-isready\"><a href=\"#boolean-isready\" aria-label=\"boolean isready permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>boolean isReady()</h3>\n<p>Indicates whether the record data has been loaded from the platform.</p>\n<h3 id=\"boolean-isdestroyed\"><a href=\"#boolean-isdestroyed\" aria-label=\"boolean isdestroyed permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>boolean isDestroyed()</h3>\n<p>Return whether the record data has been destroyed. To continue using the record it will need to be re-requested via <a href=\"./RecordHandler#getRecord(recordName)\"><code>client.record.getRecord(name)</code></a>.</p>\n<h3 id=\"int-version\"><a href=\"#int-version\" aria-label=\"int version permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>int version()</h3>\n<p>Return the record version.</p>\n<h3 id=\"string-name\"><a href=\"#string-name\" aria-label=\"string name permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String name()</h3>\n<p>Return the record name.</p>\n<h3 id=\"record-addrecordeventslistenerrecordeventslistener-listener\"><a href=\"#record-addrecordeventslistenerrecordeventslistener-listener\" aria-label=\"record addrecordeventslistenerrecordeventslistener listener permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record addRecordEventsListener(RecordEventsListener listener)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: listener\n  typ: RecordEventsListener\n  des: The listener to add\n{{/table}}</code></pre></div>\n<p>Adds a Listener that will be invoked if a discard, delete or error event occurs.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Record</span> record <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getRecord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users/A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">addRecordEventsListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RecordEventsListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> recordName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Event</span> errorType<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> errorMessage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle error</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onRecordHasProviderChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> recordName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> hasProvider<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle provider changed</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onRecordDeleted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> recordName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle record deleted</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onRecordDiscarded</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> recordName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle record discarded</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"record-removerecordeventslistenerrecordeventslistener-listener\"><a href=\"#record-removerecordeventslistenerrecordeventslistener-listener\" aria-label=\"record removerecordeventslistenerrecordeventslistener listener permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record removeRecordEventsListener(RecordEventsListener listener)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: listener\n  typ: RecordEventsListener\n  des: The listener to remove\n{{/table}}</code></pre></div>\n<p>Remove listener added via <a href=\"#addRecordEventsListener(listener)\"><code>addRecordEventsListener(listener)</code></a>.</p>\n<h3 id=\"record-setmergestrategymergestrategy-strategy\"><a href=\"#record-setmergestrategymergestrategy-strategy\" aria-label=\"record setmergestrategymergestrategy strategy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record setMergeStrategy(MergeStrategy strategy)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: strategy\n  typ: MergeStrategy\n  des: The name of the built in merge strategy to use\n{{/table}}</code></pre></div>\n<p>Set a merge strategy that comes with deepstream. These are currently LOCAL<em>WINS and REMOTE</em>WINS.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">record<span class=\"token punctuation\">.</span><span class=\"token function\">setMergeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MergeStrategy</span><span class=\"token punctuation\">.</span>LOCAL_WINS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// always use local version during conflicts</span>\n\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">setMergeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MergeStrategy</span><span class=\"token punctuation\">.</span>REMOTE_WINS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// always use remote version during conflicts</span></code></pre></div>\n<h3 id=\"record-setmergestrategyrecordmergestrategy-strategy\"><a href=\"#record-setmergestrategyrecordmergestrategy-strategy\" aria-label=\"record setmergestrategyrecordmergestrategy strategy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record setMergeStrategy(RecordMergeStrategy strategy)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: strategy\n  typ: RecordMergeStrategy\n  des: The custom merge strategy to use\n{{/table}}</code></pre></div>\n<p>Set a custom merge strategy for the record.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomMergeStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RecordMergeStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">JsonElement</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Record</span> record<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JsonElement</span> remoteValue<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> remoteVersion<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RecordMergeStrategyException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// custom merge strategy logic here</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">setMergeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomMergeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"jsonelement-get\"><a href=\"#jsonelement-get\" aria-label=\"jsonelement get permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JsonElement get()</h3>\n<p>Gets the entire record data and should always return a JsonObject that might be empty.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">JsonObject</span> data <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//   \"name\": \"Homer\",</span>\n<span class=\"token comment\">//   \"lastname\": \"Simpson\"</span>\n<span class=\"token comment\">// }</span></code></pre></div>\n<h3 id=\"jsonelement-getstring-path\"><a href=\"#jsonelement-getstring-path\" aria-label=\"jsonelement getstring path permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JsonElement get(String path)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: path\n  typ: String\n  des: The location of the data to retrieve\n{{/table}}</code></pre></div>\n<p>Gets the value at the path indicated. Because of the JSON library used, any values retrieved from the JsonObject will need to be cast accordingly, ie. <code class=\"language-text\">object.getAsString()</code> or <code class=\"language-text\">object.getAsInt()</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// with record data</span>\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//  \"name\": \"Yasser\",</span>\n<span class=\"token comment\">//  \"pets\": [ {</span>\n<span class=\"token comment\">//    \"type\": \"Dog\",</span>\n<span class=\"token comment\">//    \"name\": \"Whiskey\",</span>\n<span class=\"token comment\">//    \"age\": 3</span>\n<span class=\"token comment\">//  } ]</span>\n<span class=\"token comment\">// }</span>\n<span class=\"token comment\">// we can do</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// JsonElement.getAsString()</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pets[0]\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// JsonElement.getAsJsonObject()</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pets[0].age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// JsonElement.getAsInt()</span></code></pre></div>\n<h3 id=\"record-setobject-value-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-setobject-value-throws-deepstreamrecorddestroyedexception\" aria-label=\"record setobject value throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record set(Object value) throws DeepstreamRecordDestroyedException</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: value\n  typ: Object\n  des: The value to set\n{{/table}}</code></pre></div>\n<p>Set the value for the entire record.</p>\n<p>Make sure that the Object passed in can be serialised to a JsonElement, otherwise it will throw a IllegalStateException. Best way to guarantee this is by setting Json friendly objects, such as Map. Since this is a root the object should also not be a primitive.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">JsonObject</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndata<span class=\"token punctuation\">.</span>addProperty<span class=\"token punctuation\">.</span><span class=\"token function\">addProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Homer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"record-setstring-path-object-value-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-setstring-path-object-value-throws-deepstreamrecorddestroyedexception\" aria-label=\"record setstring path object value throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record set(String path, Object value) throws DeepstreamRecordDestroyedException</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: path\n  typ: String\n  des: The path with the JsonElement at which to set the value\n-\n  arg: value\n  typ: Object\n  des: The value to set\n{{/table}}</code></pre></div>\n<p>Set the value for a specific path in the Record data.</p>\n<p>Make sure that the Object passed in can be serialised to a JsonElement, otherwise it will throw a IllegalStateException.</p>\n<p>The best way to guarantee this is by setting Json friendly objects, such as Map.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">record<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Simpson\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"recordsetresult-setwithackobject-data\"><a href=\"#recordsetresult-setwithackobject-data\" aria-label=\"recordsetresult setwithackobject data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RecordSetResult setWithAck(Object data)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: data\n  typ: Object\n  des: The value to set\n{{/table}}</code></pre></div>\n<p>Set the value for the entire record.</p>\n<p>Make sure that the Object passed in can be serialised to a JsonElement, otherwise it will throw a IllegalStateException. Best way to guarantee this is by setting Json friendly objects, such as Map. Since this is a root the object should also not be a primitive.</p>\n<p>The <a href=\"./RecordSetResult\"><code>RecordSetResult</code></a> returned by this function will contain an error string or null, indicating the write success.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">JsonObject</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token function\">addProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"firstname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Homer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">RecordSetResult</span> result <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">setWithAck</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// handle error writing to record</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"recordsetresult-setwithackstring-path-object-data\"><a href=\"#recordsetresult-setwithackstring-path-object-data\" aria-label=\"recordsetresult setwithackstring path object data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RecordSetResult setWithAck(String path, Object data)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: path\n  typ: String\n  des: The path with the JsonElement at which to set the value\n-\n  arg: data\n  typ: Object\n  des: The value to set\n{{/table}}</code></pre></div>\n<p>Set the value for a specific path in the Record data.</p>\n<p>Make sure that the Object passed in can be serialised to a JsonElement, otherwise it will throw a IllegalStateException.</p>\n<p>The best way to guarantee this is by setting Json friendly objects, such as Map.</p>\n<p>The <a href=\"./RecordSetResult\"><code>RecordSetResult</code></a> returned by this function will contain an error string or null, indicating the write success.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">RecordSetResult</span> result <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">setWithAck</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Simpson\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// handle error writing to record</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"record-subscriberecordpathchangedcallback-callback-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-subscriberecordpathchangedcallback-callback-throws-deepstreamrecorddestroyedexception\" aria-label=\"record subscriberecordpathchangedcallback callback throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record subscribe(RecordPathChangedCallback callback) throws DeepstreamRecordDestroyedException</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: callback\n  typ: RecordPathChangedCallback\n  des: The listener to add\n{{/table}}</code></pre></div>\n<p>Registers a callback that will be invoked whenever the record’s value changes. Optionally passing the argument <code class=\"language-text\">true</code> will cause the callback to be invoked immediately with the records value.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">record<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RecordChangedCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onRecordChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> recordName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JsonElement</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// handle record changed</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"record-subscribestring-path-recordpathchangedcallback-callback-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-subscribestring-path-recordpathchangedcallback-callback-throws-deepstreamrecorddestroyedexception\" aria-label=\"record subscribestring path recordpathchangedcallback callback throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record subscribe(String path, RecordPathChangedCallback callback) throws DeepstreamRecordDestroyedException</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: path\n  typ: String\n  des: The path with the JsonElement at which to set the value\n-\n  arg: callback\n  typ: RecordPathChangedCallback\n  des: The listener to add\n{{/table}}</code></pre></div>\n<p>Registers a callback that will be invoked whenever anything in the records path changes. Optionally passing the argument <code class=\"language-text\">true</code> will cause the callback to be invoked immediately with the records value.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">record<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RecordPathChangedCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onRecordPathChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> recordName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JsonElement</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle path changed</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"record-subscriberecordchangecallback-callback-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-subscriberecordchangecallback-callback-throws-deepstreamrecorddestroyedexception\" aria-label=\"record subscriberecordchangecallback callback throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record subscribe(RecordChangeCallback callback) throws DeepstreamRecordDestroyedException</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: recordChangeCallback\n  typ: RecordChangeCallback\n  des: The listener to add\n{{/table}}</code></pre></div>\n<p>Removes a subscription previously made using <a href=\"#subscribe(callback)\"><code>subscribe(callback)</code></a>.</p>\n<h3 id=\"record-unsubscribestring-path-recordpathchangedcallback-callback-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-unsubscribestring-path-recordpathchangedcallback-callback-throws-deepstreamrecorddestroyedexception\" aria-label=\"record unsubscribestring path recordpathchangedcallback callback throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record unsubscribe(String path, RecordPathChangedCallback callback) throws DeepstreamRecordDestroyedException</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: path\n  typ: String\n  des: The path to unsubscribe from\n-\n  arg: callback\n  typ: RecordPathChangedCallback\n  des: The listener to remove\n{{/table}}</code></pre></div>\n<p>Remove the listener added via <a href=\"#subscribe(path,callback)\"><code>subscribe(path,callback)</code></a>.</p>\n<h3 id=\"record-discard-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-discard-throws-deepstreamrecorddestroyedexception\" aria-label=\"record discard throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record discard() throws DeepstreamRecordDestroyedException</h3>\n<p>Discards the record. This should be called whenever a part of an application no longer requires a record previously requested via <a href=\"./RecordHandler#getRecord(recordName)\"><code>client.record.getRecord(recordName)</code></a>.</p>\n<p>Calling discard  does not guarantee that all subscriptions will be unsubscribed.</p>\n<p>If all usages of the same record have been discarded, the record will no longer be updated by deepstream and any further usages will require the record to be retrieved again via <a href=\"./RecordHandler#getRecord(recordName)\"><code>client.record.getRecord(recordName)</code></a></p>\n<p>Once the record is successfully discard, the client will be notified via <a href=\"./RecordEventsListener#onRecordDiscarded(name)\"><code>onRecordDiscarded(name)</code></a></p>\n<h3 id=\"record-delete-throws-deepstreamrecorddestroyedexception\"><a href=\"#record-delete-throws-deepstreamrecorddestroyedexception\" aria-label=\"record delete throws deepstreamrecorddestroyedexception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record delete() throws DeepstreamRecordDestroyedException</h3>\n<p>Deletes the record and notifies other users of its deletion. This in turn will force all clients to discard the record.</p>\n<p>Once the record is successfully deleted, clients will be notified via <a href=\"./RecordEventsListener#onRecordDeleted(name)\"><code>onRecordDeleted(name)</code></a></p>","frontmatter":{"title":"Class Record","wip":null,"addedInVersion":null},"fields":{"slug":"/docs/client-java-v2/Record/","githubLink":"https://github.com/deepstreamIO/deepstream.io-website/blob/master/content/docs/50-client-java-v2/Record/index.md","weightedSlug":"/docs/50-client-java-v2/Record/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/client-java-v2/Record/","navigation":{"order":100,"server":{"order":10,"command-line-interface":{"slug":"/docs/server/command-line-interface/","title":"Command Line Interface","description":"The options that can be passed to the deepstream server via the command line","leaf":true,"order":20,"":{"order":100}},"node-api":{"slug":"/docs/server/node-api/","title":"Node API","description":"API docs for using deepstream within your own node application","leaf":true,"order":30,"":{"order":100}},"user-file":{"slug":"/docs/server/user-file/","title":"User File","description":"The API on how you can configure and use file-based authentication","leaf":true,"order":100,"":{"order":100}},"valve-permissions":{"slug":"/docs/server/valve-permissions/","title":"Valve Permissions","description":"The API for Valve, deepstream's powerful permissioning mechanism","leaf":true,"order":100,"":{"order":100}},"configuration":{"slug":"/docs/server/configuration/","title":"Configuration","description":"The available configuration options to customize deepstream","leaf":true,"order":10,"":{"order":100}}},"client-js":{"order":40,"client":{"slug":"/docs/client-js/client/","title":"Javascript Client","description":"The entry point API documentation for the deepstream.io js client","leaf":true,"order":0,"":{"order":100}},"options":{"slug":"/docs/client-js/options/","title":"Options","description":"The options that the deepstream javascript client can be initialized with","leaf":true,"order":10,"":{"order":100}},"event":{"slug":"/docs/client-js/event/","title":"Event","description":"API docs for deepstream's events, the many to many broadcasting mechanism","leaf":true,"order":20,"":{"order":100}},"presence":{"slug":"/docs/client-js/presence/","title":"Presence","description":"API docs for deepstream's presence feature, allowing clients to know about other connected clients","leaf":true,"order":30,"":{"order":100}},"reqres-client-rpc":{"slug":"/docs/client-js/reqres-client-rpc/","title":"RPC","description":"The API docs for remote procedure calls, deepstream's request-response mechanism","leaf":true,"order":40,"":{"order":100}},"reqres-response":{"slug":"/docs/client-js/reqres-response/","title":"RPC Response","description":"The API docs for deepstream's RPC response object","leaf":true,"order":50,"":{"order":100}},"datasync-client-record":{"slug":"/docs/client-js/datasync-client-record/","title":"Record Factory","description":"This class gives you access to all methods related to data-sync","leaf":true,"order":80,"":{"order":100}},"datasync-anonymous-record":{"slug":"/docs/client-js/datasync-anonymous-record/","title":"Anonymous Record","description":"Learn how to use anonymous records to switch context without having to renew bindings","leaf":true,"order":90,"":{"order":100}},"datasync-list":{"slug":"/docs/client-js/datasync-list/","title":"List","description":"API docs for deepstream's list object, a manageable collection of record names","leaf":true,"order":99,"":{"order":100}},"datasync-record":{"slug":"/docs/client-js/datasync-record/","title":"Record","description":"The API docs for deepstream records","leaf":true,"order":70,"":{"order":100}}},"client-java-v2":{"order":50,"DeepstreamFactory":{"slug":"/docs/client-java-v2/DeepstreamFactory/","title":"Class DeepstreamFactory","description":"A singleton that allows for shared access to a client instance","leaf":true,"order":0,"":{"order":100}},"DeepstreamClient":{"slug":"/docs/client-java-v2/DeepstreamClient/","title":"Class DeepstreamClient","description":"The main entrypoint for client operations","leaf":true,"order":10,"":{"order":100}},"ConnectionStateListener":{"slug":"/docs/client-java-v2/ConnectionStateListener/","title":"Interface ConnectionStateListener","description":"A listener that's notified whenever the client's connections tate changes","leaf":true,"order":100,"":{"order":100}},"DeepstreamRuntimeErrorHandler":{"slug":"/docs/client-java-v2/DeepstreamRuntimeErrorHandler/","title":"Class DeepstreamRuntimeErrorHandler","description":"Allows for all runtime errors to be caught in a single place","leaf":true,"order":100,"":{"order":100}},"EventHandler":{"slug":"/docs/client-java-v2/EventHandler/","title":"Class EventHandler","description":"The main entry point to deepstream's publish-subscribe mechanism","leaf":true,"order":100,"":{"order":100}},"EventListener":{"slug":"/docs/client-java-v2/EventListener/","title":"Interface EventListener","description":"A listener that's notified whenever an event is received via deepstream's pub-sub mechanism","leaf":true,"order":100,"":{"order":100}},"HasResult":{"slug":"/docs/client-java-v2/HasResult/","title":"Class HasResult","description":"A class representing the outcome of a record Has","leaf":true,"order":100,"":{"order":100}},"List":{"slug":"/docs/client-java-v2/List/","title":"Class List","description":"An observable collection of record names, useful to model relational structures","leaf":true,"order":100,"":{"order":100}},"ListChangedListener":{"slug":"/docs/client-java-v2/ListChangedListener/","title":"Interface ListChangedListener","description":"A listener that's notified whenever any change to a list occurs","leaf":true,"order":100,"":{"order":100}},"ListEntryChangedListener":{"slug":"/docs/client-java-v2/ListEntryChangedListener/","title":"Interface ListEntryChangedListener","description":"A listener that's notified whenever entries are added, removed or moved within a List","leaf":true,"order":100,"":{"order":100}},"ListenListener":{"slug":"/docs/client-java-v2/ListenListener/","title":"Interface ListenListener","description":"An interface that notifies whenever a pattern match has been found or removed","leaf":true,"order":100,"":{"order":100}},"LoginResult":{"slug":"/docs/client-java-v2/LoginResult/","title":"Class LoginResult","description":"An object containing information about the last login attempt","leaf":true,"order":100,"":{"order":100}},"PresenceEventListener":{"slug":"/docs/client-java-v2/PresenceEventListener/","title":"Interface PresenceEventListener","description":"A listener that's notified whenever an authenticated client logs into or out of deepstream","leaf":true,"order":100,"":{"order":100}},"PresenceHandler":{"slug":"/docs/client-java-v2/PresenceHandler/","title":"Class PresenceHandler","description":"The main entry point to deepstream's presence mechanism","leaf":true,"order":100,"":{"order":100}},"RecordChangedCallback":{"slug":"/docs/client-java-v2/RecordChangedCallback/","title":"Interface RecordChangedCallback","description":"A listener that's notified whenever the data within a record changes","leaf":true,"order":100,"":{"order":100}},"RecordEventsListener":{"slug":"/docs/client-java-v2/RecordEventsListener/","title":"Interface RecordEventsListener","description":"A listener that's notified whenever a record is deleted, or discarded","leaf":true,"order":100,"":{"order":100}},"RecordHandler":{"slug":"/docs/client-java-v2/RecordHandler/","title":"Class RecordHandler","description":"The main access point for the creation of Records, Lists and Anonymous Records","leaf":true,"order":100,"":{"order":100}},"RecordMergeStrategy":{"slug":"/docs/client-java-v2/RecordMergeStrategy/","title":"Class RecordMergeStategy","description":"A collection of strategies that will be applied to resolve data-conflicts","leaf":true,"order":100,"":{"order":100}},"RecordPathChangedCallback":{"slug":"/docs/client-java-v2/RecordPathChangedCallback/","title":"Interface RecordPathChangedCallback","description":"A listener that's notified whenever the value of a path within a record changes","leaf":true,"order":100,"":{"order":100}},"RecordSetResult":{"slug":"/docs/client-java-v2/RecordSetResult/","title":"Class RecordSetResult","description":"A class representing the outcome of a Record write","leaf":true,"order":100,"":{"order":100}},"RpcHandler":{"slug":"/docs/client-java-v2/RpcHandler/","title":"Class RpcHandler","description":"The main access point for Remote Procedure Calls - deepstream's request-response mechanism","leaf":true,"order":100,"":{"order":100}},"RpcRequestedListener":{"slug":"/docs/client-java-v2/RpcRequestedListener/","title":"Interface RpcRequestedListener","description":"A listener that's notified with the response to a Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"RpcResponse":{"slug":"/docs/client-java-v2/RpcResponse/","title":"Class RpcResponse","description":"A class representing the response to a Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"RpcResult":{"slug":"/docs/client-java-v2/RpcResult/","title":"Class RpcResult","description":"A class representing the outcome of an Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"SnapshotResult":{"slug":"/docs/client-java-v2/SnapshotResult/","title":"Class SnapshotResult","description":"A class representing the outcome of a Snapshot","leaf":true,"order":100,"":{"order":100}},"exceptions":{"slug":"/docs/client-java-v2/exceptions/","title":"Exceptions","description":"Java Client exceptions","leaf":true,"order":100,"":{"order":100}},"Record":{"slug":"/docs/client-java-v2/Record/","title":"Class Record","description":"The main object of deepstream's realtime datastore","leaf":true,"order":100,"":{"order":100}},"AnonymousRecord":{"slug":"/docs/client-java-v2/AnonymousRecord/","title":"Class AnonymousRecord","description":"An AnonymousRecord acts as a wrapper around an actual record, allowing it to be swapped whilst keeping all bindings intact","leaf":true,"order":100,"":{"order":100}},"Actions":{"slug":"/docs/client-java-v2/Actions/","title":"Class Actions","description":"All the actions in the deepstream client","leaf":true,"order":100,"":{"order":100}},"AnonymousRecordNameChangedListener":{"slug":"/docs/client-java-v2/AnonymousRecordNameChangedListener/","title":"Interface AnonymousRecordNameChangedListener","description":"A listener that's notified whenever an AnonymousRecord's name is changed","leaf":true,"order":100,"":{"order":100}}},"client-http":{"order":30,"v1":{"slug":"/docs/client-http/v1/","title":"HTTP API","description":"The reference for deepstream's HTTP API","leaf":true,"order":100,"":{"order":100}}}}}}}