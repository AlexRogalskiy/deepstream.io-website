{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/client-java-v2/RecordHandler/","webpackCompilationHash":"0f3352f8274dbe1392d8","result":{"data":{"markdownRemark":{"html":"<p>The factory method’s for deepstream’s realtime datastore concepts, such as <a href=\"#getRecord(recordName)\"><code>getRecord(recordName)</code></a>, <a href=\"#getList(listName)\"><code>getList(listName)</code></a>, provider functionality such as <a href=\"#listen(eventName,listener)\"><code>listen(eventName,listener)</code></a> and single requests like <a href=\"#snapshot(recordName)\"><code>snapshot(recordName)</code></a></p></p>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"record-getrecordstring-recordname\"><a href=\"#record-getrecordstring-recordname\" aria-label=\"record getrecordstring recordname permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record getRecord(String recordName)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: recordName\n  typ: String\n  des: The name of the record to get\n{{/table}}</code></pre></div>\n<p>Returns an existing record or creates a new one. If creating a new one the record will not be in a ready state till it is loaded from the server.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Record</span> record <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getRecord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users/A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"list-getliststring-listname\"><a href=\"#list-getliststring-listname\" aria-label=\"list getliststring listname permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List getList(String listName)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: listName\n  typ: String\n  des: The name of the list to retrieve\n{{/table}}</code></pre></div>\n<p>Returns an existing List or creates a new one. A list is a specialised type of record that holds an array of recordNames.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Record</span> record <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"anonymousrecord-getanonymousrecord\"><a href=\"#anonymousrecord-getanonymousrecord\" aria-label=\"anonymousrecord getanonymousrecord permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AnonymousRecord getAnonymousRecord()</h3>\n<p>Returns an <a href=\"./AnonymousRecord\">AnonymousRecord</a>. An anonymous record is effectively a wrapper that mimicks the API of a record, but allows for the underlying record to be swapped without losing subscriptions etc.</p>\n<p>This is particularly useful when selecting from a number of similarly structured records. E.g. a list of users that can be choosen from a list.</p>\n<p>The only API differences to a normal record is an additional <a href=\"./AnonymousRecord#setName(name)\"><code>setName(name)</code></a> method.</p>\n<h3 id=\"snapshotresult-snapshotstring-recordname\"><a href=\"#snapshotresult-snapshotstring-recordname\" aria-label=\"snapshotresult snapshotstring recordname permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SnapshotResult snapshot(String recordName)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: recordName\n  typ: String\n  des: The name of the record which data to retrieve\n{{/table}}</code></pre></div>\n<p>Retrieves a <a href=\"./SnapshotResult\">SnapshotResult</a> with the current record data. Using this doesn’t subscribe the client to changes the way <a href=\"#getRecord(name)\"><code>getRecord(name)</code></a> does.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">SnapshotResult</span> result <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">snapshot</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user/B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"boolean-hasstring-recordname-throws-deepstreamerror\"><a href=\"#boolean-hasstring-recordname-throws-deepstreamerror\" aria-label=\"boolean hasstring recordname throws deepstreamerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>boolean has(String recordName) throws DeepstreamError</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: recordName\n  typ: String\n  des: The name of the record to check\n{{/table}}</code></pre></div>\n<p>Returns a <a href=\"./HasResult\">HasResult</a> that shows whether or not the record exists.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">HasResult</span> result <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user/C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"void-listenstring-pattern-listenlistener-listencallback-modeopensource--enterprise\"><a href=\"#void-listenstring-pattern-listenlistener-listencallback-modeopensource--enterprise\" aria-label=\"void listenstring pattern listenlistener listencallback modeopensource  enterprise permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>void listen(String pattern, ListenListener listenCallback)” mode=“opensource / enterprise</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: pattern\n  typ: String\n  des: The pattern to match events which subscription status you want to be informed of\n-\n  arg: listener\n  typ: ListenListener\n  des: The Listen Listener\n{{/table}}</code></pre></div>\n<p>Allows to listen for record subscriptions made by this or other clients. This is useful to create “active” data providers, e.g. providers that only provide data for a particular record if a user is actually interested in it.</p>\n<p>You can only listen to a pattern once, and if multiple listeners match the same pattern only a single one will be notified.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">client<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListenListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onSubscriptionForPatternAdded</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> subscription<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">/* can provide */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onSubscriptionForPatternRemoved</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> subscription<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle unsubscription</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"void-unlistenstring-pattern-modeopensource--enterprise\"><a href=\"#void-unlistenstring-pattern-modeopensource--enterprise\" aria-label=\"void unlistenstring pattern modeopensource  enterprise permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>void unlisten(String pattern)” mode=“opensource / enterprise</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{#table mode=&quot;java-api&quot;}}\n-\n  arg: pattern\n  typ: String\n  des: The pattern that has been previously listened to\n{{/table}}</code></pre></div>\n<p>Remove the listener added via <a href=\"#listen(pattern,listener)\"><code>listen(pattern,listener)</code></a>. This will remove the provider as the active provider and allow another provider to take its place.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">unlisten</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users/*\"</span><span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Class RecordHandler","wip":null,"addedInVersion":null},"fields":{"slug":"/docs/client-java-v2/RecordHandler/","githubLink":"https://github.com/deepstreamIO/deepstream.io-website/blob/master/content/docs/50-client-java-v2/RecordHandler/index.md","weightedSlug":"/docs/50-client-java-v2/RecordHandler/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/client-java-v2/RecordHandler/","navigation":{"order":100,"server":{"order":10,"command-line-interface":{"slug":"/docs/server/command-line-interface/","title":"Command Line Interface","description":"The options that can be passed to the deepstream server via the command line","leaf":true,"order":20,"":{"order":100}},"node-api":{"slug":"/docs/server/node-api/","title":"Node API","description":"API docs for using deepstream within your own node application","leaf":true,"order":30,"":{"order":100}},"user-file":{"slug":"/docs/server/user-file/","title":"User File","description":"The API on how you can configure and use file-based authentication","leaf":true,"order":100,"":{"order":100}},"valve-permissions":{"slug":"/docs/server/valve-permissions/","title":"Valve Permissions","description":"The API for Valve, deepstream's powerful permissioning mechanism","leaf":true,"order":100,"":{"order":100}},"configuration":{"slug":"/docs/server/configuration/","title":"Configuration","description":"The available configuration options to customize deepstream","leaf":true,"order":10,"":{"order":100}}},"client-js":{"order":40,"client":{"slug":"/docs/client-js/client/","title":"Javascript Client","description":"The entry point API documentation for the deepstream.io js client","leaf":true,"order":0,"":{"order":100}},"options":{"slug":"/docs/client-js/options/","title":"Options","description":"The options that the deepstream javascript client can be initialized with","leaf":true,"order":10,"":{"order":100}},"event":{"slug":"/docs/client-js/event/","title":"Event","description":"API docs for deepstream's events, the many to many broadcasting mechanism","leaf":true,"order":20,"":{"order":100}},"presence":{"slug":"/docs/client-js/presence/","title":"Presence","description":"API docs for deepstream's presence feature, allowing clients to know about other connected clients","leaf":true,"order":30,"":{"order":100}},"reqres-client-rpc":{"slug":"/docs/client-js/reqres-client-rpc/","title":"RPC","description":"The API docs for remote procedure calls, deepstream's request-response mechanism","leaf":true,"order":40,"":{"order":100}},"reqres-response":{"slug":"/docs/client-js/reqres-response/","title":"RPC Response","description":"The API docs for deepstream's RPC response object","leaf":true,"order":50,"":{"order":100}},"datasync-client-record":{"slug":"/docs/client-js/datasync-client-record/","title":"Record Factory","description":"This class gives you access to all methods related to data-sync","leaf":true,"order":80,"":{"order":100}},"datasync-anonymous-record":{"slug":"/docs/client-js/datasync-anonymous-record/","title":"Anonymous Record","description":"Learn how to use anonymous records to switch context without having to renew bindings","leaf":true,"order":90,"":{"order":100}},"datasync-list":{"slug":"/docs/client-js/datasync-list/","title":"List","description":"API docs for deepstream's list object, a manageable collection of record names","leaf":true,"order":99,"":{"order":100}},"datasync-record":{"slug":"/docs/client-js/datasync-record/","title":"Record","description":"The API docs for deepstream records","leaf":true,"order":70,"":{"order":100}}},"client-java-v2":{"order":50,"DeepstreamFactory":{"slug":"/docs/client-java-v2/DeepstreamFactory/","title":"Class DeepstreamFactory","description":"A singleton that allows for shared access to a client instance","leaf":true,"order":0,"":{"order":100}},"DeepstreamClient":{"slug":"/docs/client-java-v2/DeepstreamClient/","title":"Class DeepstreamClient","description":"The main entrypoint for client operations","leaf":true,"order":10,"":{"order":100}},"ConnectionStateListener":{"slug":"/docs/client-java-v2/ConnectionStateListener/","title":"Interface ConnectionStateListener","description":"A listener that's notified whenever the client's connections tate changes","leaf":true,"order":100,"":{"order":100}},"DeepstreamRuntimeErrorHandler":{"slug":"/docs/client-java-v2/DeepstreamRuntimeErrorHandler/","title":"Class DeepstreamRuntimeErrorHandler","description":"Allows for all runtime errors to be caught in a single place","leaf":true,"order":100,"":{"order":100}},"EventHandler":{"slug":"/docs/client-java-v2/EventHandler/","title":"Class EventHandler","description":"The main entry point to deepstream's publish-subscribe mechanism","leaf":true,"order":100,"":{"order":100}},"EventListener":{"slug":"/docs/client-java-v2/EventListener/","title":"Interface EventListener","description":"A listener that's notified whenever an event is received via deepstream's pub-sub mechanism","leaf":true,"order":100,"":{"order":100}},"HasResult":{"slug":"/docs/client-java-v2/HasResult/","title":"Class HasResult","description":"A class representing the outcome of a record Has","leaf":true,"order":100,"":{"order":100}},"List":{"slug":"/docs/client-java-v2/List/","title":"Class List","description":"An observable collection of record names, useful to model relational structures","leaf":true,"order":100,"":{"order":100}},"ListChangedListener":{"slug":"/docs/client-java-v2/ListChangedListener/","title":"Interface ListChangedListener","description":"A listener that's notified whenever any change to a list occurs","leaf":true,"order":100,"":{"order":100}},"ListEntryChangedListener":{"slug":"/docs/client-java-v2/ListEntryChangedListener/","title":"Interface ListEntryChangedListener","description":"A listener that's notified whenever entries are added, removed or moved within a List","leaf":true,"order":100,"":{"order":100}},"ListenListener":{"slug":"/docs/client-java-v2/ListenListener/","title":"Interface ListenListener","description":"An interface that notifies whenever a pattern match has been found or removed","leaf":true,"order":100,"":{"order":100}},"LoginResult":{"slug":"/docs/client-java-v2/LoginResult/","title":"Class LoginResult","description":"An object containing information about the last login attempt","leaf":true,"order":100,"":{"order":100}},"PresenceEventListener":{"slug":"/docs/client-java-v2/PresenceEventListener/","title":"Interface PresenceEventListener","description":"A listener that's notified whenever an authenticated client logs into or out of deepstream","leaf":true,"order":100,"":{"order":100}},"PresenceHandler":{"slug":"/docs/client-java-v2/PresenceHandler/","title":"Class PresenceHandler","description":"The main entry point to deepstream's presence mechanism","leaf":true,"order":100,"":{"order":100}},"RecordChangedCallback":{"slug":"/docs/client-java-v2/RecordChangedCallback/","title":"Interface RecordChangedCallback","description":"A listener that's notified whenever the data within a record changes","leaf":true,"order":100,"":{"order":100}},"RecordEventsListener":{"slug":"/docs/client-java-v2/RecordEventsListener/","title":"Interface RecordEventsListener","description":"A listener that's notified whenever a record is deleted, or discarded","leaf":true,"order":100,"":{"order":100}},"RecordHandler":{"slug":"/docs/client-java-v2/RecordHandler/","title":"Class RecordHandler","description":"The main access point for the creation of Records, Lists and Anonymous Records","leaf":true,"order":100,"":{"order":100}},"RecordMergeStrategy":{"slug":"/docs/client-java-v2/RecordMergeStrategy/","title":"Class RecordMergeStategy","description":"A collection of strategies that will be applied to resolve data-conflicts","leaf":true,"order":100,"":{"order":100}},"RecordPathChangedCallback":{"slug":"/docs/client-java-v2/RecordPathChangedCallback/","title":"Interface RecordPathChangedCallback","description":"A listener that's notified whenever the value of a path within a record changes","leaf":true,"order":100,"":{"order":100}},"RecordSetResult":{"slug":"/docs/client-java-v2/RecordSetResult/","title":"Class RecordSetResult","description":"A class representing the outcome of a Record write","leaf":true,"order":100,"":{"order":100}},"RpcHandler":{"slug":"/docs/client-java-v2/RpcHandler/","title":"Class RpcHandler","description":"The main access point for Remote Procedure Calls - deepstream's request-response mechanism","leaf":true,"order":100,"":{"order":100}},"RpcRequestedListener":{"slug":"/docs/client-java-v2/RpcRequestedListener/","title":"Interface RpcRequestedListener","description":"A listener that's notified with the response to a Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"RpcResponse":{"slug":"/docs/client-java-v2/RpcResponse/","title":"Class RpcResponse","description":"A class representing the response to a Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"RpcResult":{"slug":"/docs/client-java-v2/RpcResult/","title":"Class RpcResult","description":"A class representing the outcome of an Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"SnapshotResult":{"slug":"/docs/client-java-v2/SnapshotResult/","title":"Class SnapshotResult","description":"A class representing the outcome of a Snapshot","leaf":true,"order":100,"":{"order":100}},"exceptions":{"slug":"/docs/client-java-v2/exceptions/","title":"Exceptions","description":"Java Client exceptions","leaf":true,"order":100,"":{"order":100}},"Record":{"slug":"/docs/client-java-v2/Record/","title":"Class Record","description":"The main object of deepstream's realtime datastore","leaf":true,"order":100,"":{"order":100}},"AnonymousRecord":{"slug":"/docs/client-java-v2/AnonymousRecord/","title":"Class AnonymousRecord","description":"An AnonymousRecord acts as a wrapper around an actual record, allowing it to be swapped whilst keeping all bindings intact","leaf":true,"order":100,"":{"order":100}},"Actions":{"slug":"/docs/client-java-v2/Actions/","title":"Class Actions","description":"All the actions in the deepstream client","leaf":true,"order":100,"":{"order":100}},"AnonymousRecordNameChangedListener":{"slug":"/docs/client-java-v2/AnonymousRecordNameChangedListener/","title":"Interface AnonymousRecordNameChangedListener","description":"A listener that's notified whenever an AnonymousRecord's name is changed","leaf":true,"order":100,"":{"order":100}}},"client-http":{"order":30,"v1":{"slug":"/docs/client-http/v1/","title":"HTTP API","description":"The reference for deepstream's HTTP API","leaf":true,"order":100,"":{"order":100}}}}}}}