{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/client-js/datasync-record/","webpackCompilationHash":"0f3352f8274dbe1392d8","result":{"data":{"markdownRemark":{"html":"<p>Records are one of deepstreamâ€™s core features. A Record is an arbitrary JSON data structure that can be created, retrieved, updated, deleted and listened to. Records are created and retrieved using <code class=\"language-text\">client.record.getRecord(&#39;name&#39;)</code></p>\n<p>To learn more about how they are used, have a look at the <a href=\"/tutorials/core/datasync/records/\">Record Tutorial</a>.</p>\n<h2 id=\"creating-records\"><a href=\"#creating-records\" aria-label=\"creating records permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating records</h2>\n<p>Records are created and retrieved using <code class=\"language-text\">client.record.getRecord( &#39;name&#39; );</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> recordName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">user/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">getUid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">// \"user/iqaphzxy-2o1pnsvcnbo\"</span>\n<span class=\"token keyword\">const</span> record <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getRecord</span><span class=\"token punctuation\">(</span>recordName<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"properties\"><a href=\"#properties\" aria-label=\"properties permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Properties</h2>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>String</td>\n<td>The name of the record, as specified when calling <code class=\"language-text\">client.record.getRecord( name )</code></td>\n</tr>\n<tr>\n<td>isReady</td>\n<td>Boolean</td>\n<td>True once the record has received its current data and emitted the <code class=\"language-text\">&#39;ready&#39;</code> event</td>\n</tr>\n<tr>\n<td>hasProvider</td>\n<td>Boolean</td>\n<td>True once a listener accepts subscriptions to a record. Otherwise there are no active listeners. The <code class=\"language-text\">&#39;hasProviderChanged&#39;</code> event is proving the information whenever the values has been changed.</td>\n</tr>\n<tr>\n<td>isDestroyed</td>\n<td>Boolean</td>\n<td>True once the record has been discarded or deleted. The record would need to be retrieved again via `client.record.getRecord( name )</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"events\"><a href=\"#events\" aria-label=\"events permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Events</h2>\n<h3 id=\"ready\"><a href=\"#ready\" aria-label=\"ready permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ready</h3>\n<p>Emitted once the record has received its current data from the server.</p>\n<h3 id=\"hasproviderchanged\"><a href=\"#hasproviderchanged\" aria-label=\"hasproviderchanged permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hasProviderChanged</h3>\n<p>Emitted whenever the <code class=\"language-text\">hasProvider</code> property has been changed. Argument is the <code class=\"language-text\">hasProvider</code> property.</p>\n<h3 id=\"delete\"><a href=\"#delete\" aria-label=\"delete permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>delete</h3>\n<p>Emitted when the record was deleted, whether by this client or by another.</p>\n<h3 id=\"discard\"><a href=\"#discard\" aria-label=\"discard permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>discard</h3>\n<p>Emitted once the record was discarded.</p>\n<h3 id=\"error\"><a href=\"#error\" aria-label=\"error permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>error</h3>\n<p>Emitted if the record encounters an error. The error message is passed to the event callback.</p>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"whenreadycallback\"><a href=\"#whenreadycallback\" aria-label=\"whenreadycallback permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>whenReady(callback)</h3>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Optional</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>callback</td>\n<td>Function</td>\n<td>true</td>\n<td>A function that should be invoked as soon as the record is ready.</td>\n</tr>\n</tbody>\n</table>\n<p>Immediately executes the callback if the record is ready. Otherwise, it registers it as a callback for the <code class=\"language-text\">ready</code> event.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Callback</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">whenReady</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">record</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// data has now been loaded</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">await</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">whenReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"setpath-value-callback\"><a href=\"#setpath-value-callback\" aria-label=\"setpath value callback permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>set(path, value, callback)</h3>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Optional</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>String</td>\n<td>true</td>\n<td>A particular path within the JSON structure that should be set</td>\n</tr>\n<tr>\n<td>value</td>\n<td>Various</td>\n<td>false</td>\n<td>The value the record or path should be set to</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>Function</td>\n<td>true</td>\n<td>Will be called with the result of the write when using record write acknowledgements</td>\n</tr>\n</tbody>\n</table>\n<p>Used to set the recordâ€™s data and can be called with a value. A path and callback can optionally be included.</p>\n<p>Including a callback will indicate that write acknowledgement to cache or\nstorage is required and will slow down the operation.</p>\n<div class=\"custom-block info\"><div class=\"custom-block-body\"><p>After calling <code class=\"language-text\">set</code>, you still have to wait for the record to be ready before a <code class=\"language-text\">get</code> call will return the value assigned by <code class=\"language-text\">set</code>.</p></div></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Set the entire record's data</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  personalData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    firstname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Homer'</span><span class=\"token punctuation\">,</span>\n    lastname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Simpson'</span><span class=\"token punctuation\">,</span>\n    status<span class=\"token punctuation\">:</span> <span class=\"token string\">'married'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bart'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maggie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lisa'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Update only firstname</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'personalData.firstname'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Marge'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Set the entire record with write acknowledgement</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  personalData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Record set with error:'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Record set without error'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Update only a property with write acknowledgement</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'personalData.firstname'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Homer'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Record set with error:'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Record set without error'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"setwithackpath-value\"><a href=\"#setwithackpath-value\" aria-label=\"setwithackpath value permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setWithAck(path, value)</h3>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Optional</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>String</td>\n<td>true</td>\n<td>A particular path within the JSON structure that should be set</td>\n</tr>\n<tr>\n<td>value</td>\n<td>Various</td>\n<td>false</td>\n<td>The value the record or path should be set to</td>\n</tr>\n</tbody>\n</table>\n<p>Used to set the recordâ€™s data and can be called with a value. A path can optionally be included.</p>\n<p>This function returns a promise that fulfills when writing to cache or storage completed thus slowing down the operation.</p>\n<div class=\"custom-block info\"><div class=\"custom-block-body\"><p>After awaiting <code class=\"language-text\">setWithAck</code>, the data is persisted so using <code class=\"language-text\">get</code> will retrieve the updated record.</p></div></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Set the entire record's data with write acknowledgement</span>\n<span class=\"token keyword\">await</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">setWithAck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  personalData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    firstname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Homer'</span><span class=\"token punctuation\">,</span>\n    lastname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Simpson'</span><span class=\"token punctuation\">,</span>\n    status<span class=\"token punctuation\">:</span> <span class=\"token string\">'married'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bart'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maggie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lisa'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Update only firstname with write acknowledgement</span>\n<span class=\"token keyword\">await</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">setWithAck</span><span class=\"token punctuation\">(</span><span class=\"token string\">'personalData.firstname'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Marge'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"getpath\"><a href=\"#getpath\" aria-label=\"getpath permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>get(path)</h3>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Optional</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>String</td>\n<td>true</td>\n<td>A particular path within the JSON structure that should be retrieved.</td>\n</tr>\n</tbody>\n</table>\n<p>Used to return the recordâ€™s data but if called without an argument, will return all the data. <code class=\"language-text\">get()</code> can also be used to retrive a specific part by defining a path string. If the part can not be found, <code class=\"language-text\">undefined</code> will be returned.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">record<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Returns entire object</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'children[1]'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Maggie'</span>\nrecord<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'personalData.firstname'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Homer'</span></code></pre></div>\n<h3 id=\"subscribepath-callback-triggernow\"><a href=\"#subscribepath-callback-triggernow\" aria-label=\"subscribepath callback triggernow permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>subscribe(path, callback, triggerNow)</h3>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Optional</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>String</td>\n<td>true</td>\n<td>A path within the JSON structure that should be subscribed to.</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>Function</td>\n<td>false</td>\n<td>A function that is called whenever the value changes and the data passed through.</td>\n</tr>\n<tr>\n<td>triggerNow</td>\n<td>Boolean</td>\n<td>true</td>\n<td>If true, the callback function will be called immediately with the current value.</td>\n</tr>\n</tbody>\n</table>\n<p>Registers that a function will be performed whenever the recordâ€™s value changes. All of the recordâ€™s data can be subscribed to by providing a callback function or when changes are performed to a specific path within the record.</p>\n<p>Optional: Passing <code class=\"language-text\">true</code> will execute the callback immediately with the recordâ€™s current value.</p>\n<p>Listening to any changes on the record:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Subscribe to any change of the record</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">userDataChanged</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do stuff...</span>\n<span class=\"token punctuation\">}</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>userDataChanged<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Listening to changes on a specific path within the record:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Only subscribe to the status of the user</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">statusChanged</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">status</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">===</span> <span class=\"token string\">'married'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// I want my childhood back!</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> statusChanged<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"unsubscribepath-callback\"><a href=\"#unsubscribepath-callback\" aria-label=\"unsubscribepath callback permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>unsubscribe(path, callback)</h3>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Optional</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>String</td>\n<td>true</td>\n<td>The path that was previously used for subscribe.</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>Function</td>\n<td>false</td>\n<td>The previously registered callback function.</td>\n</tr>\n</tbody>\n</table>\n<p>Removes a subscription previous made using <code class=\"language-text\">record.subscribe()</code>. Defining a path with <code class=\"language-text\">unsubscribe</code> removes that specific path, or with a callback, can remove it from generic subscriptions.</p>\n<div class=\"custom-block info\"><div class=\"custom-block-body\"><p><code class=\"language-text\">unsubscribe</code> is entirely a client-side operation. To notify the server that the app would no longer interested in the record, use <code class=\"language-text\">discard()</code> instead.</p></div></div>\n<p>Unsubscribe all callbacks registered with the path <code class=\"language-text\">status</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unsubscribe a specific callback registered for the path <code class=\"language-text\">status</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> statusChanged<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unsubscribe a specific callback registered for the record:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span>userDataChanged<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unsubscribe all callbacks not associated with a path:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"discard-1\"><a href=\"#discard-1\" aria-label=\"discard 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>discard()</h3>\n<p>Removes all change listeners and notifies the server that client no longer wants updates for this record if your application\nno longer requires the record.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user<span class=\"token punctuation\">.</span><span class=\"token function\">discard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"custom-block info\"><div class=\"custom-block-body\"><p>It is important to use this operation for records that are no longer needed. <code class=\"language-text\">unsubscribe()</code> only removes listeners and does not notify the server; in this case, the server will continue to send updates to the client.\nRecords are only discarded when you have no record subscriptions left.</p></div></div>\n<h3 id=\"delete-1\"><a href=\"#delete-1\" aria-label=\"delete 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>delete()</h3>\n<p>This permanently deletes the record on the server for all users.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"custom-block info\"><div class=\"custom-block-body\"><p>Since deleting a record means that it no longer exists, the resulting action will be a forced discard to all clients with that record.\nCreating a record directly after deleting it without waiting for the <code class=\"language-text\">delete</code> event can end up in a race condition. Try to ensure the record has been deleted succesfully to avoid edge cases.</p></div></div>","frontmatter":{"title":"Record","wip":null,"addedInVersion":null},"fields":{"slug":"/docs/client-js/datasync-record/","githubLink":"https://github.com/deepstreamIO/deepstream.io-website/blob/master/content/docs/40-client-js/70-datasync-record/index.md","weightedSlug":"/docs/40-client-js/70-datasync-record/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/client-js/datasync-record/","navigation":{"order":100,"server":{"order":10,"command-line-interface":{"slug":"/docs/server/command-line-interface/","title":"Command Line Interface","description":"The options that can be passed to the deepstream server via the command line","leaf":true,"order":20,"":{"order":100}},"node-api":{"slug":"/docs/server/node-api/","title":"Node API","description":"API docs for using deepstream within your own node application","leaf":true,"order":30,"":{"order":100}},"user-file":{"slug":"/docs/server/user-file/","title":"User File","description":"The API on how you can configure and use file-based authentication","leaf":true,"order":100,"":{"order":100}},"valve-permissions":{"slug":"/docs/server/valve-permissions/","title":"Valve Permissions","description":"The API for Valve, deepstream's powerful permissioning mechanism","leaf":true,"order":100,"":{"order":100}},"configuration":{"slug":"/docs/server/configuration/","title":"Configuration","description":"The available configuration options to customize deepstream","leaf":true,"order":10,"":{"order":100}}},"client-js":{"order":40,"client":{"slug":"/docs/client-js/client/","title":"Javascript Client","description":"The entry point API documentation for the deepstream.io js client","leaf":true,"order":0,"":{"order":100}},"options":{"slug":"/docs/client-js/options/","title":"Options","description":"The options that the deepstream javascript client can be initialized with","leaf":true,"order":10,"":{"order":100}},"event":{"slug":"/docs/client-js/event/","title":"Event","description":"API docs for deepstream's events, the many to many broadcasting mechanism","leaf":true,"order":20,"":{"order":100}},"presence":{"slug":"/docs/client-js/presence/","title":"Presence","description":"API docs for deepstream's presence feature, allowing clients to know about other connected clients","leaf":true,"order":30,"":{"order":100}},"reqres-client-rpc":{"slug":"/docs/client-js/reqres-client-rpc/","title":"RPC","description":"The API docs for remote procedure calls, deepstream's request-response mechanism","leaf":true,"order":40,"":{"order":100}},"reqres-response":{"slug":"/docs/client-js/reqres-response/","title":"RPC Response","description":"The API docs for deepstream's RPC response object","leaf":true,"order":50,"":{"order":100}},"datasync-client-record":{"slug":"/docs/client-js/datasync-client-record/","title":"Record Factory","description":"This class gives you access to all methods related to data-sync","leaf":true,"order":80,"":{"order":100}},"datasync-anonymous-record":{"slug":"/docs/client-js/datasync-anonymous-record/","title":"Anonymous Record","description":"Learn how to use anonymous records to switch context without having to renew bindings","leaf":true,"order":90,"":{"order":100}},"datasync-list":{"slug":"/docs/client-js/datasync-list/","title":"List","description":"API docs for deepstream's list object, a manageable collection of record names","leaf":true,"order":99,"":{"order":100}},"datasync-record":{"slug":"/docs/client-js/datasync-record/","title":"Record","description":"The API docs for deepstream records","leaf":true,"order":70,"":{"order":100}}},"client-java-v2":{"order":50,"DeepstreamFactory":{"slug":"/docs/client-java-v2/DeepstreamFactory/","title":"Class DeepstreamFactory","description":"A singleton that allows for shared access to a client instance","leaf":true,"order":0,"":{"order":100}},"DeepstreamClient":{"slug":"/docs/client-java-v2/DeepstreamClient/","title":"Class DeepstreamClient","description":"The main entrypoint for client operations","leaf":true,"order":10,"":{"order":100}},"ConnectionStateListener":{"slug":"/docs/client-java-v2/ConnectionStateListener/","title":"Interface ConnectionStateListener","description":"A listener that's notified whenever the client's connections tate changes","leaf":true,"order":100,"":{"order":100}},"DeepstreamRuntimeErrorHandler":{"slug":"/docs/client-java-v2/DeepstreamRuntimeErrorHandler/","title":"Class DeepstreamRuntimeErrorHandler","description":"Allows for all runtime errors to be caught in a single place","leaf":true,"order":100,"":{"order":100}},"EventHandler":{"slug":"/docs/client-java-v2/EventHandler/","title":"Class EventHandler","description":"The main entry point to deepstream's publish-subscribe mechanism","leaf":true,"order":100,"":{"order":100}},"EventListener":{"slug":"/docs/client-java-v2/EventListener/","title":"Interface EventListener","description":"A listener that's notified whenever an event is received via deepstream's pub-sub mechanism","leaf":true,"order":100,"":{"order":100}},"HasResult":{"slug":"/docs/client-java-v2/HasResult/","title":"Class HasResult","description":"A class representing the outcome of a record Has","leaf":true,"order":100,"":{"order":100}},"List":{"slug":"/docs/client-java-v2/List/","title":"Class List","description":"An observable collection of record names, useful to model relational structures","leaf":true,"order":100,"":{"order":100}},"ListChangedListener":{"slug":"/docs/client-java-v2/ListChangedListener/","title":"Interface ListChangedListener","description":"A listener that's notified whenever any change to a list occurs","leaf":true,"order":100,"":{"order":100}},"ListEntryChangedListener":{"slug":"/docs/client-java-v2/ListEntryChangedListener/","title":"Interface ListEntryChangedListener","description":"A listener that's notified whenever entries are added, removed or moved within a List","leaf":true,"order":100,"":{"order":100}},"ListenListener":{"slug":"/docs/client-java-v2/ListenListener/","title":"Interface ListenListener","description":"An interface that notifies whenever a pattern match has been found or removed","leaf":true,"order":100,"":{"order":100}},"LoginResult":{"slug":"/docs/client-java-v2/LoginResult/","title":"Class LoginResult","description":"An object containing information about the last login attempt","leaf":true,"order":100,"":{"order":100}},"PresenceEventListener":{"slug":"/docs/client-java-v2/PresenceEventListener/","title":"Interface PresenceEventListener","description":"A listener that's notified whenever an authenticated client logs into or out of deepstream","leaf":true,"order":100,"":{"order":100}},"PresenceHandler":{"slug":"/docs/client-java-v2/PresenceHandler/","title":"Class PresenceHandler","description":"The main entry point to deepstream's presence mechanism","leaf":true,"order":100,"":{"order":100}},"RecordChangedCallback":{"slug":"/docs/client-java-v2/RecordChangedCallback/","title":"Interface RecordChangedCallback","description":"A listener that's notified whenever the data within a record changes","leaf":true,"order":100,"":{"order":100}},"RecordEventsListener":{"slug":"/docs/client-java-v2/RecordEventsListener/","title":"Interface RecordEventsListener","description":"A listener that's notified whenever a record is deleted, or discarded","leaf":true,"order":100,"":{"order":100}},"RecordHandler":{"slug":"/docs/client-java-v2/RecordHandler/","title":"Class RecordHandler","description":"The main access point for the creation of Records, Lists and Anonymous Records","leaf":true,"order":100,"":{"order":100}},"RecordMergeStrategy":{"slug":"/docs/client-java-v2/RecordMergeStrategy/","title":"Class RecordMergeStategy","description":"A collection of strategies that will be applied to resolve data-conflicts","leaf":true,"order":100,"":{"order":100}},"RecordPathChangedCallback":{"slug":"/docs/client-java-v2/RecordPathChangedCallback/","title":"Interface RecordPathChangedCallback","description":"A listener that's notified whenever the value of a path within a record changes","leaf":true,"order":100,"":{"order":100}},"RecordSetResult":{"slug":"/docs/client-java-v2/RecordSetResult/","title":"Class RecordSetResult","description":"A class representing the outcome of a Record write","leaf":true,"order":100,"":{"order":100}},"RpcHandler":{"slug":"/docs/client-java-v2/RpcHandler/","title":"Class RpcHandler","description":"The main access point for Remote Procedure Calls - deepstream's request-response mechanism","leaf":true,"order":100,"":{"order":100}},"RpcRequestedListener":{"slug":"/docs/client-java-v2/RpcRequestedListener/","title":"Interface RpcRequestedListener","description":"A listener that's notified with the response to a Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"RpcResponse":{"slug":"/docs/client-java-v2/RpcResponse/","title":"Class RpcResponse","description":"A class representing the response to a Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"RpcResult":{"slug":"/docs/client-java-v2/RpcResult/","title":"Class RpcResult","description":"A class representing the outcome of an Remote Procedure Call","leaf":true,"order":100,"":{"order":100}},"SnapshotResult":{"slug":"/docs/client-java-v2/SnapshotResult/","title":"Class SnapshotResult","description":"A class representing the outcome of a Snapshot","leaf":true,"order":100,"":{"order":100}},"exceptions":{"slug":"/docs/client-java-v2/exceptions/","title":"Exceptions","description":"Java Client exceptions","leaf":true,"order":100,"":{"order":100}},"Record":{"slug":"/docs/client-java-v2/Record/","title":"Class Record","description":"The main object of deepstream's realtime datastore","leaf":true,"order":100,"":{"order":100}},"AnonymousRecord":{"slug":"/docs/client-java-v2/AnonymousRecord/","title":"Class AnonymousRecord","description":"An AnonymousRecord acts as a wrapper around an actual record, allowing it to be swapped whilst keeping all bindings intact","leaf":true,"order":100,"":{"order":100}},"Actions":{"slug":"/docs/client-java-v2/Actions/","title":"Class Actions","description":"All the actions in the deepstream client","leaf":true,"order":100,"":{"order":100}},"AnonymousRecordNameChangedListener":{"slug":"/docs/client-java-v2/AnonymousRecordNameChangedListener/","title":"Interface AnonymousRecordNameChangedListener","description":"A listener that's notified whenever an AnonymousRecord's name is changed","leaf":true,"order":100,"":{"order":100}}},"client-http":{"order":30,"v1":{"slug":"/docs/client-http/v1/","title":"HTTP API","description":"The reference for deepstream's HTTP API","leaf":true,"order":100,"":{"order":100}}}}}}}