{"componentChunkName":"component---src-templates-blog-tsx","path":"/blog/20190920-release-deepstream-5.0/","webpackCompilationHash":"0f3352f8274dbe1392d8","result":{"data":{"markdownRemark":{"html":"<div style=\"height: 300px;\n    width: 100%;\n    background-repeat: repeat;\n    display: inline-block;\n    background-size: 275px 300px;\n    background-image: url(/images/eltons/elton-zombie.svg);\n    animation: pulse 3s infinite;\">\n</div>\n<h3 id=\"features\"><a href=\"#features\" aria-label=\"features permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features:</h3>\n<ul>\n<li>New License</li>\n<li>Singular HTTP Service</li>\n<li>SSL Support reintroduced</li>\n<li>Better Config file validation</li>\n<li>JSON Logger</li>\n<li>NGINX Helper</li>\n<li>Combined authentication handler</li>\n<li>Embedded dependencies</li>\n<li>Builtin HTTP Monitoring</li>\n<li>Storage authentication endpoint</li>\n<li>Guess whats back, official clustering support!</li>\n</ul>\n<h3 id=\"backwards-compatibility\"><a href=\"#backwards-compatibility\" aria-label=\"backwards compatibility permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Backwards compatibility</h3>\n<ul>\n<li>Custom authentication plugins now have to use the async/await API</li>\n<li>Custom permission handlers need to slightly tweak the function arguments</li>\n<li>Deployment configuration has to be (simplified) to respect the single HTTP/Websocket port</li>\n</ul>\n<h3 id=\"upgrade-guide\"><a href=\"#upgrade-guide\" aria-label=\"upgrade guide permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Upgrade guide</h3>\n<p>You can see the upgrade guide for backwards compatibility <a href=\"/tutorials/upgrade-guides/v5/server/\">here</a></p>\n<h2 id=\"tldr\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TLDR:</h2>\n<h3 id=\"back-to-mit-license\"><a href=\"#back-to-mit-license\" aria-label=\"back to mit license permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BACK TO MIT LICENSE</h3>\n<p>This part deserves its own post and I canâ€™t try to do it justice here. The summary is that all deepstream components will be released using the MIT license, starting with the heavily worked on Server and Client in V5. What exactly does this mean?</p>\n<ul>\n<li>Clustering is open source (with redis support out of the box on docker and binaries)</li>\n<li>Monitoring endpoint is open source</li>\n</ul>\n<h2 id=\"single-http-service\"><a href=\"#single-http-service\" aria-label=\"single http service permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Single HTTP Service</h2>\n<p>After working with multiple clients on deploying deepstream we realized one large annoyance was how our plugins previously ran in isolation. What this meant was that we would run our HTTP service under port 8080, deepstream on 6020, and all the other\nservices on different ports (like monitoring and such). This has a massive limitation of having to constantly update the deployment config to respect the ports, as well as generally just not supporting more then one on some load balancers.</p>\n<p>The other issue was that we had multiple different network stacks running in deepstream with code duplicated in all those endpoints. </p>\n<p>In V4 (and prior) we had config that looked like this (ignoring a bunch of configuration options and extra endpoints):</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">connectionEndpoints</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ws<span class=\"token punctuation\">-</span>websocket\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># port for the websocket server</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6020</span>\n        <span class=\"token comment\"># host for the websocket server</span>\n        <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 0.0.0.0\n        <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n        <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">-</span>http\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># port for the http server</span>\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token comment\"># host for the http server</span>\n      <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 0.0.0.0\n      <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n      <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> uws<span class=\"token punctuation\">-</span>websocket\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># port for the websocket server</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6020</span>\n        <span class=\"token comment\"># host for the websocket server</span>\n        <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 0.0.0.0\n        <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n        <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check\n\n        <span class=\"token comment\"># SSL Configuration</span>\n        <span class=\"token key atrule\">sslKey</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">null</span>\n        <span class=\"token key atrule\">sslCert</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">null</span>\n        <span class=\"token key atrule\">sslDHParams</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">null</span>\n        <span class=\"token key atrule\">sslPassphrase</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">null</span></code></pre></div>\n<p>What this means is every single endpoint was responsible for setting up its own HTTP/Websocket Server, health-checks, SSL certification and so forth.</p>\n<p>Now lets take a look at V5:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">httpServer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n    <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check\n    <span class=\"token comment\"># -- CORS --</span>\n    <span class=\"token comment\"># if disabled, only requests with an 'Origin' header matching one specified under 'origins'</span>\n    <span class=\"token comment\"># below will be permitted and the 'Access-Control-Allow-Credentials' response header will be</span>\n    <span class=\"token comment\"># enabled</span>\n    <span class=\"token key atrule\">allowAllOrigins</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token comment\"># a list of allowed origins</span>\n    <span class=\"token key atrule\">origins</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'https://example.com'</span>\n    <span class=\"token comment\"># Headers to copy over from websocket</span>\n    <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> user<span class=\"token punctuation\">-</span>agent\n\n<span class=\"token comment\"># Connection Endpoint Configuration</span>\n<span class=\"token key atrule\">connectionEndpoints</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ws<span class=\"token punctuation\">-</span>binary\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">urlPath</span><span class=\"token punctuation\">:</span> /deepstream\n      <span class=\"token punctuation\">...</span>\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ws<span class=\"token punctuation\">-</span>text\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">urlPath</span><span class=\"token punctuation\">:</span> /deepstream<span class=\"token punctuation\">-</span>v3\n      <span class=\"token punctuation\">...</span>\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ws<span class=\"token punctuation\">-</span>json\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">urlPath</span><span class=\"token punctuation\">:</span> /deepstream<span class=\"token punctuation\">-</span>json\n      <span class=\"token punctuation\">...</span>\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">...</span></code></pre></div>\n<p>Different right? The idea here is the entire connection stack can now share a global HTTP server via some nifty HTTP helpers:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Register a HTTP Post Route</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>httpService<span class=\"token punctuation\">.</span><span class=\"token function\">registerPostPathPrefix</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">body<span class=\"token punctuation\">,</span> meta<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">response</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> responseData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Register a HTTP Get Route</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>httpService<span class=\"token punctuation\">.</span><span class=\"token function\">registerGetPathPrefix</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">meta<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">response</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> responseData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Registering a WebSocket Endpoint</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>httpService<span class=\"token punctuation\">.</span><span class=\"token function\">registerWebsocketEndpoint</span><span class=\"token punctuation\">(</span>urlPath<span class=\"token punctuation\">,</span> createWSSocketWrapper<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">onConnection</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socketWrapper</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onSocketClose</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socketWrapper</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Send a websocket message, this is abstracted since the API changes between node and uws</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>httpService<span class=\"token punctuation\">.</span><span class=\"token function\">sendWebsocketMessage</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> isBinary<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Return all socket associated to a specific user, regardless what connection endpoint is being</span>\n<span class=\"token comment\">// used. Useful to kick out users in bulk</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>httpService<span class=\"token punctuation\">.</span><span class=\"token function\">getSocketWrappersForUserId</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The best part about this is that you can change the httpServer to uws to have the entire server run\nusing it</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">httpServer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> uws\n  <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n    <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check</code></pre></div>\n<h2 id=\"ssl-reintroduced\"><a href=\"#ssl-reintroduced\" aria-label=\"ssl reintroduced permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL Reintroduced</h2>\n<p>SSL was removed from the V4 server because of the multiple ports issue. We recommend (and still do!) that\nour customers deploy SSL in production via SSL termination, such as that provided with Nginx and all modern\nload balancers.</p>\n<p>However, sometimes we donâ€™t want to justify having to run an entire separate process (clouds ainâ€™t cheap)\njust to have a demo application running. Because of that, and the introduction of our new <code class=\"language-text\">fileLoad</code> and\n<code class=\"language-text\">file</code> config macros we can now enable SSL by just doing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">httpServer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n    <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check\n    <span class=\"token comment\"># -- CORS --</span>\n    <span class=\"token comment\"># if disabled, only requests with an 'Origin' header matching one specified under 'origins'</span>\n    <span class=\"token comment\"># below will be permitted and the 'Access-Control-Allow-Credentials' response header will be</span>\n    <span class=\"token comment\"># enabled</span>\n    <span class=\"token key atrule\">allowAllOrigins</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token comment\"># a list of allowed origins</span>\n    <span class=\"token key atrule\">origins</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'https://example.com'</span>\n    <span class=\"token comment\"># Headers to copy over from websocket</span>\n    <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> user<span class=\"token punctuation\">-</span>agent\n    <span class=\"token comment\"># Options required to create an ssl app</span>\n    <span class=\"token key atrule\">ssl</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> fileLoad(ssl/key.pem)\n      <span class=\"token key atrule\">cert</span><span class=\"token punctuation\">:</span> fileLoad(ssl/cert.pem)\n    <span class=\"token comment\">#   ca: ...</span></code></pre></div>\n<p>OR</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> uws\n<span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># url path for http health-checks, GET requests to this path will return 200 if deepstream is alive</span>\n  <span class=\"token key atrule\">healthCheckPath</span><span class=\"token punctuation\">:</span> /health<span class=\"token punctuation\">-</span>check\n  <span class=\"token comment\"># Headers to copy over from websocket</span>\n  <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> user<span class=\"token punctuation\">-</span>agent\n  <span class=\"token comment\"># Options required to create an ssl app</span>\n  <span class=\"token key atrule\">ssl</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> file(ssl/key.pem)\n    <span class=\"token key atrule\">cert</span><span class=\"token punctuation\">:</span> file(ssl/cert.pem)\n  <span class=\"token comment\">##  dhParams: ...</span>\n  <span class=\"token comment\">##  passphrase: ...</span></code></pre></div>\n<h3 id=\"better-config-file-validation\"><a href=\"#better-config-file-validation\" aria-label=\"better config file validation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Config file validation</h3>\n<p>Remember when you would stare at the screen with despair because you would get an error like\nthis <code class=\"language-text\">Invalid configuration: data should NOT have additional properties</code> and have no idea why\nor where its from?</p>\n<p>V5 now uses some smarter error handling, allowing you to get errors that make a bit more sense.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">There was an error validating your configuration:\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> Property listens is not expected to be here\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span>/logger/type should be equal to one of the allowed values: default, Did you mean default?</code></pre></div>\n<h3 id=\"json-logger\"><a href=\"#json-logger\" aria-label=\"json logger permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON Logger</h3>\n<p>You can now use a JSON logger for deepstream (useful for streaming data to ELK stack and so forth) by\nsetting the name of the logger to pino</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">logger</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pino</code></pre></div>\n<h3 id=\"nginx-helper\"><a href=\"#nginx-helper\" aria-label=\"nginx helper permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NGINX Helper</h3>\n<p>You can output nginx config for deepstream (automatically generated from config) by running</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">deepstream nginx</code></pre></div>\n<p>Not the most useful command for some, but here by popular demand!</p>\n<h2 id=\"combined-authentication-handler\"><a href=\"#combined-authentication-handler\" aria-label=\"combined authentication handler permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Combined authentication handler</h2>\n<p>The Authentication mechanism has changed in order to support multiple strategies at the same time.</p>\n<p>In V4 you could only set one auth endpoint:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">auth</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> open</code></pre></div>\n<p>When in V5 you now are required to set an array:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">auth</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> open</code></pre></div>\n<p>What this means is when a user logs in we can check multiple different authentication mechanisms before saying a user was not found. Some useful scenarios are when you want to keep deepstream services authentication local to the server, and only forward front-end clients to a login server. Another extremely useful setup is to first check if a user is actually available, and if not give them an anonymous view (which can be extremely restricted when it comes to permissions).</p>\n<p>This also means that individual authentication handlers moved from this API:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">isValidUser</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">connectionData<span class=\"token punctuation\">,</span> authData<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>isValid<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    username<span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    clientData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    serverData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To this one:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token function\">isValidUser</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">connectionData<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">,</span> authData<span class=\"token punctuation\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If invalid or valid</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    isValid<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    clientData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    userData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// If not found, return null to allow next auth handler to </span>\n  <span class=\"token comment\">// try</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"embedded-dependencies\"><a href=\"#embedded-dependencies\" aria-label=\"embedded dependencies permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Embedded Dependencies</h3>\n<p>The docker image and binaries now have all the official plugins pre-bundled. This has been done to remove the whole <code class=\"language-text\">deepstream install</code> CLI. It was really painful trying to create a binary for each individual plugin and operating system (for native dependencies). Since plugins are barely changed any fixes\nwill be released in the following deepstream release. You can still select specific versions, but itâ€™s unlikely you would need to.</p>\n<h3 id=\"builtin-http-monitoring\"><a href=\"#builtin-http-monitoring\" aria-label=\"builtin http monitoring permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Builtin HTTP Monitoring</h3>\n<p>Added a HTTP monitoring API which provides data in a format that can easily be consumed by a data visualization/metric tool. A guide will be released to show how this can be done using the ELK stack!</p>\n<h3 id=\"opensource-clustering-support\"><a href=\"#opensource-clustering-support\" aria-label=\"opensource clustering support permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenSource clustering support</h3>\n<p>This deserves a blog post for itself one day talking about the difficulties of trying to have an entirely opensource server while also being able to run a company around it. The final outcome however is\nstarting from V5 clustering is officially back and supported, with a redis clustering mechanism that can be used via node <code class=\"language-text\">@deepstream/clusternode-redis</code> and is shipped with deepstream binary/docker images. Happy clustering!</p>","frontmatter":{"title":"Release: Deepstream 5.0","description":"The MIT Resurrection"},"fields":{"slug":"/blog/20190920-release-deepstream-5.0/","githubLink":"https://github.com/deepstreamIO/deepstream.io-website/blob/master/content/blog/20190920-release-deepstream-5.0/index.md","weightedSlug":"/blog/20190920-release-deepstream-5.0/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/20190920-release-deepstream-5.0/","navigation":{"order":100,"release-deepstream-2.3":{"slug":"/blog/20170509-release-deepstream-2.3/","title":"Release: Deepstream 2.3","description":"Announcing the 2.3 release of deepstream.io and all the associated goodies","leaf":true,"order":20170509,"":{"order":100}},"release-deepstream-2.4":{"slug":"/blog/20170702-release-deepstream-2.4/","title":"Release: Deepstream 2.4","description":"Announcing the 2.4 release of deepstream.io","leaf":true,"order":20170702,"":{"order":100}},"release-deepstream-3.0":{"slug":"/blog/20170721-release-deepstream-3.0/","title":"Release: Deepstream 3.0","description":"a foundation for a multi-protocol-server","leaf":true,"order":20170721,"":{"order":100}},"release-clientjs-4.0":{"slug":"/blog/20190730-release-clientjs-4.0/","title":"Release: Javascript/Node 4.0","description":"The newly improved Typescript and ES6 SDK","leaf":true,"order":20190730,"":{"order":100}},"release-deepstream-4.1":{"slug":"/blog/20190830-release-deepstream-4.1/","title":"Release: Deepstream 4.1","description":"Deepstream V3 and below compatibility support!","leaf":true,"order":20190830,"":{"order":100}},"release-clientjs-4.1":{"slug":"/blog/20190905-release-clientjs-4.1/","title":"Release: Javascript/Node 4.1","description":"Default Timer Implementation","leaf":true,"order":20190905,"":{"order":100}},"release-deepstream-4.2":{"slug":"/blog/20190909-release-deepstream-4.2/","title":"Release: Deepstream 4.2","description":"MQTT AND JSON Protocol support!","leaf":true,"order":20190909,"":{"order":100}},"release-clientjs-5.0":{"slug":"/blog/20190920-release-clientjs-5.0/","title":"Release: Javascript/Node 5.0","description":"Better Typescript and MIT","leaf":true,"order":20190920,"":{"order":100}},"release-deepstream-5.0":{"slug":"/blog/20190920-release-deepstream-5.0/","title":"Release: Deepstream 5.0","description":"The MIT Resurrection","leaf":true,"order":20190920,"":{"order":100}},"realtime-search":{"slug":"/blog/20191104-realtime-search/","title":"Realtime Search","description":"The Realtime Search Evolution","leaf":true,"order":20191104,"":{"order":100}},"release-deepstream-4.0":{"slug":"/blog/20190730-release-deepstream-4.0/","title":"Release: Deepstream 4.0","description":"The massively upgraded deepstream server! Introducing too many changes to be contained within a description!","leaf":true,"order":20190730,"":{"order":100}}}}}}