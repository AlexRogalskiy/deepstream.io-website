{"componentChunkName":"component---src-templates-guides-tsx","path":"/guides/realtime-search/setting-up-the-backend/","webpackCompilationHash":"0f3352f8274dbe1392d8","result":{"data":{"markdownRemark":{"html":"<p>In order to have realtime search running we need:</p>\n<ul>\n<li>deepstream server</li>\n<li>mongodb server</li>\n<li>mongodb replicate (for changefeeds to be enabled)</li>\n<li>realtime-search</li>\n</ul>\n<p>Due to the slightly more complex nature of the backend we will let docker-compose manage everything by just using the following commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/deepstreamIO/deepstream.io-realtime-search.git\n<span class=\"token builtin class-name\">cd</span> deepstream.io-realtime-search/example\ndocker-compose up</code></pre></div>\n<p>Which would result in all the four images being pulled down and run, with deepstream port exposed on 6020</p>\n<p>To look a little deeper into it, youâ€™ll see that:</p>\n<ul>\n<li>We have a deepstream <code class=\"language-text\">config.yml</code> file for mongodb configuration:</li>\n</ul>\n<p><div class=\"gatsby-highlight\">\n        <pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">serverName</span><span class=\"token punctuation\">:</span> realtime<span class=\"token punctuation\">-</span>search<span class=\"token punctuation\">-</span>example\n\n<span class=\"token key atrule\">record</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># I would recommend excluding any object generated via listening from storage objects from storage</span>\n  <span class=\"token comment\"># since they can usually be computed</span>\n  <span class=\"token key atrule\">storageExclusionPrefixes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> deepstream_search/\n\n<span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mongodb\n  <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">connectionString</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>MONGO_URL<span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>MONGO_DATABASE<span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">splitChar</span><span class=\"token punctuation\">:</span> /\n\n<span class=\"token key atrule\">permission</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> config\n  <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Permissions file</span>\n    <span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span> fileLoad(permissions.yml)\n    <span class=\"token comment\"># Amount of times nested cross-references will be loaded. Avoids endless loops</span>\n    <span class=\"token key atrule\">maxRuleIterations</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token comment\"># PermissionResults are cached to increase performance. Lower number means more loading</span>\n    <span class=\"token key atrule\">cacheEvacuationInterval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60000</span>\n\n<span class=\"token comment\"># Authentication</span>\n<span class=\"token key atrule\">auth</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> file\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># Path to the user file. Can be json, js or yml</span>\n      <span class=\"token key atrule\">users</span><span class=\"token punctuation\">:</span> fileLoad(users.yml)\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> none</code></pre>\n        </div></p>\n<ul>\n<li>A docker compose file + a mongodb script which sets up deepstream, realtime search, mongodb and a mongodb replica (all using the default images):</li>\n</ul>\n<p><div class=\"gatsby-highlight\">\n        <pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.3'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">mongo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mongo<span class=\"token punctuation\">:</span>3.6.8\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 27017<span class=\"token punctuation\">:</span><span class=\"token number\">27017</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> mongod <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>storageEngine wiredTiger <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>smallfiles <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>replSet rs0 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>logpath=/dev/null <span class=\"token comment\"># --quiet</span>\n\n    <span class=\"token comment\"># this exists to configure the mongo instance to act like a single-node</span>\n    <span class=\"token comment\"># replica set. This is needed to get an oplog collection running so that we can</span>\n    <span class=\"token comment\"># tail it to keep deepstream in sync. Once the replica set is running,</span>\n    <span class=\"token comment\"># this container will exit peacefully.</span>\n  <span class=\"token key atrule\">database-replica-set</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mongo<span class=\"token punctuation\">:</span>3.6.8\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./scripts<span class=\"token punctuation\">:</span>/scripts\n    <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/scripts/local-replica-set.sh'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mongo\n\n  <span class=\"token key atrule\">deepstream</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> deepstreamio/deepstream.io<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'deepstream start -c /etc/deepstream/conf/config.yml'</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> MONGO_URL=mongodb<span class=\"token punctuation\">:</span>//mongo/deepstream\n      <span class=\"token punctuation\">-</span> MONGO_DATABASE=deepstream\n      <span class=\"token punctuation\">-</span> DEEPSTREAM_PASSWORD=deepstream_password\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./conf<span class=\"token punctuation\">:</span>/etc/deepstream/conf<span class=\"token punctuation\">:</span>ro\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 6020<span class=\"token punctuation\">:</span><span class=\"token number\">6020</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mongo\n\n  <span class=\"token key atrule\">realtime-search</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> deepstreamio/realtime<span class=\"token punctuation\">-</span>search<span class=\"token punctuation\">:</span>latest<span class=\"token punctuation\">-</span>alpine\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'mongo'</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> DEEPSTREAM_URL=ws<span class=\"token punctuation\">:</span>//deepstream<span class=\"token punctuation\">:</span><span class=\"token number\">6020</span>\n      <span class=\"token punctuation\">-</span> DEEPSTREAM_PASSWORD=deepstream_password\n      <span class=\"token punctuation\">-</span> MONGO_DATABASE=deepstream\n      <span class=\"token punctuation\">-</span> MONGO_URL=mongodb<span class=\"token punctuation\">:</span>//mongo/deepstream\n      <span class=\"token punctuation\">-</span> MONGO_PRIMARY_KEY=ds_key\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> deepstream\n      <span class=\"token punctuation\">-</span> mongo</code></pre>\n        </div></p>\n<p>Once you run <code class=\"language-text\">docker-compose up</code> that should be it for the backend!</p>\n<p>You can also look at all the CLI commands by running</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> docker run deepstreamio/realtime-search mongo --help\n\nUsage: provider mongo <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span>\n\nstart a mongodb realtime search provider\n\nOptions:\n  --mongo-url <span class=\"token operator\">&lt;</span>mongo-url<span class=\"token operator\">></span>            Connect to this mongo server\n  --mongo-database <span class=\"token operator\">&lt;</span>mongo-database<span class=\"token operator\">></span>  Name of mongo database\n  --ds-url <span class=\"token operator\">&lt;</span>ds-url<span class=\"token operator\">></span>                  Connect to this deepstream server\n  --logger-type <span class=\"token operator\">&lt;</span>logger-type<span class=\"token operator\">></span>        Log messages with pino or to std\n  --log-level <span class=\"token operator\">&lt;</span>level<span class=\"token operator\">></span>                Log messages with this level and above\n  --collection-lookup <span class=\"token operator\">&lt;</span>fileName<span class=\"token operator\">></span>     JSON <span class=\"token function\">file</span> containing model lookups\n  --inspect <span class=\"token operator\">&lt;</span>url<span class=\"token operator\">></span>                    Enable node inspector\n  --native-query                     Use native mongodb query syntax\n  -h, --help                         output usage information</code></pre></div>","frontmatter":{"title":"Setting up the backend","description":"Starting the backend services"},"fields":{"slug":"/guides/realtime-search/setting-up-the-backend/","githubLink":"https://github.com/deepstreamIO/deepstream.io-website/blob/master/content/guides/realtime-search/20-setting-up-the-backend/index.md","weightedSlug":"/guides/realtime-search/20-setting-up-the-backend/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/guides/realtime-search/setting-up-the-backend/","navigation":{"order":100,"live-progress-bar":{"order":100,"intro":{"slug":"/guides/live-progress-bar/intro/","title":"Live Progress Bar","description":"Learn how to create a Live Progress Bar using deepstream","leaf":true,"order":0,"":{"order":100}},"prerequistes":{"slug":"/guides/live-progress-bar/prerequistes/","title":"Prerequisite","description":"Step one: What you need to know before starting this guide","leaf":true,"order":10,"":{"order":100}},"setting-up-the-backend":{"slug":"/guides/live-progress-bar/setting-up-the-backend/","title":"Setting up the backend","description":"Step two: Starting the backend service","leaf":true,"order":20,"":{"order":100}},"login":{"slug":"/guides/live-progress-bar/login/","title":"Logging in to deepstream","description":"Step three: How to login to the server using HTTP auth","leaf":true,"order":25,"":{"order":100}},"server-events":{"slug":"/guides/live-progress-bar/server-events/","title":"Emitting events","description":"Step three: Emitting events as the post progresses","leaf":true,"order":30,"":{"order":100}},"visualizing-in-the-frontend":{"slug":"/guides/live-progress-bar/visualizing-in-the-frontend/","title":"Visualizing in the frontend","description":"Step three: Visualizing in the frontend","leaf":true,"order":40,"":{"order":100}},"permissions":{"slug":"/guides/live-progress-bar/permissions/","title":"Permissions","description":"Step three: Restricting who can emit events","leaf":true,"order":50,"":{"order":100}},"conclusion":{"slug":"/guides/live-progress-bar/conclusion/","title":"Summary and extra tasks","description":"Step seven: Conclusion","leaf":true,"order":90,"":{"order":100}}},"post-it-board":{"order":100,"intro":{"slug":"/guides/post-it-board/intro/","title":"Collaborative Post-It Board","description":"Creating a Retrospective Board with deepstream","leaf":true,"order":0,"":{"order":100}},"prerequisites":{"slug":"/guides/post-it-board/prerequisites/","title":"Prerequisite","description":"Step one: What you need to know before starting this guide","leaf":true,"order":10,"":{"order":100}},"setting-up-the-backend":{"slug":"/guides/post-it-board/setting-up-the-backend/","title":"Setting up the postit backend","description":"Step two: Starting the postit services","leaf":true,"order":15,"":{"order":100}},"login":{"slug":"/guides/post-it-board/login/","title":"Logging in to your boards","description":"Step three: How to login to the server using storage auth","leaf":true,"order":20,"":{"order":100}},"the-postits":{"slug":"/guides/post-it-board/the-postits/","title":"Creating postits","description":"Step four: Creating a postit","leaf":true,"order":30,"":{"order":100}},"the-board":{"slug":"/guides/post-it-board/the-board/","title":"Grouping Post-Its Together","description":"Step five: Grouping Post-Its","leaf":true,"order":40,"":{"order":100}},"permissions":{"slug":"/guides/post-it-board/permissions/","title":"Permissioning it all","description":"Step six: Adding some permissions","leaf":true,"order":50,"":{"order":100}},"conclusion":{"slug":"/guides/post-it-board/conclusion/","title":"Summary and extra tasks","description":"Step seven: Conclusion","leaf":true,"order":90,"":{"order":100}}},"realtime-search":{"order":100,"intro":{"slug":"/guides/realtime-search/intro/","title":"Announcing new Realtime Search!","description":"Learn how to use realtime-search with deepstream","leaf":true,"order":0,"":{"order":100}},"prerequisites":{"slug":"/guides/realtime-search/prerequisites/","title":"Prerequisite","description":"What you need to know before starting this guide","leaf":true,"order":10,"":{"order":100}},"setting-up-the-backend":{"slug":"/guides/realtime-search/setting-up-the-backend/","title":"Setting up the backend","description":"Starting the backend services","leaf":true,"order":20,"":{"order":100}},"logging-in":{"slug":"/guides/realtime-search/logging-in/","title":"Logging in","description":"Logging into deepstream","leaf":true,"order":25,"":{"order":100}},"doing-a-realtime-search":{"slug":"/guides/realtime-search/doing-a-realtime-search/","title":"Realtime Search","description":"Doing a realtime search","leaf":true,"order":30,"":{"order":100}},"permissions":{"slug":"/guides/realtime-search/permissions/","title":"Permissions","description":"Step three: Restricting who can emit events","leaf":true,"order":50,"":{"order":100}},"conclusion":{"slug":"/guides/realtime-search/conclusion/","title":"Summary and extra tasks","description":"Step seven: Conclusion","leaf":true,"order":60,"":{"order":100}}}}}}}