{"componentChunkName":"component---src-templates-guides-tsx","path":"/guides/live-progress-bar/server-events/","webpackCompilationHash":"0f3352f8274dbe1392d8","result":{"data":{"markdownRemark":{"html":"<p>With deepstream setup and an open connection, it’s time to simulate a POST handler that takes a long time and send out realtime events for each of the completed stages.</p>\n<p>Events in deepstream is very similar to the normal JS event emitter. You can emit, subscribe, unsubscribe and do some extra magic we’ll skip for now!</p>\n<h3 id=\"events\"><a href=\"#events\" aria-label=\"events permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Events</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">eventHandler</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event received with data'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Subscribe to an event across the deepstream cluster</span>\nclient<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event-name'</span><span class=\"token punctuation\">,</span> eventHandler<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Emit an event out to the deepstream cluster (and locally)</span>\nclient<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event-name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> timestamp<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Unsubscribe to the event across the deepstream cluster</span>\nclient<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event-name'</span><span class=\"token punctuation\">,</span> eventHandler<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"express-post-route\"><a href=\"#express-post-route\" aria-label=\"express post route permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Express Post Route</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// A small util function to make code easier to read</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PromiseDelay</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">delay</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/post'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">postProgressPromise</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// The delay simulates time taken for a task to complete</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">PromiseDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    client<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">progress:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>percentage<span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Posting...'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">receiveProgressPromise</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">PromiseDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    client<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">progress:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>percentage<span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Receiving...'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> processProgressPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">PromiseDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    client<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">progress:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>percentage<span class=\"token punctuation\">:</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Processing...'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">completeProgressPromise</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">PromiseDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    client<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">progress:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>percentage<span class=\"token punctuation\">:</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">'Completing...'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">endProgressPromise</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">PromiseDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    client<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">progress:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>percentage<span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">postProgressPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>receiveProgressPromise<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>processProgressPromise<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>completeProgressPromise<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>endProgressPromise<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">:</span> <span class=\"token string\">'Completed'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>After a second or two (which is a simulating a real live long request), we emit a deepstream event. These events are sent with payload containing the percentage estimate and the feedback message for the client.</p>","frontmatter":{"title":"Emitting events","description":"Step three: Emitting events as the post progresses"},"fields":{"slug":"/guides/live-progress-bar/server-events/","githubLink":"https://github.com/deepstreamIO/deepstream.io-website/blob/master/content/guides/live-progress-bar/30-server-events/index.md","weightedSlug":"/guides/live-progress-bar/30-server-events/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/guides/live-progress-bar/server-events/","navigation":{"order":100,"live-progress-bar":{"order":100,"intro":{"slug":"/guides/live-progress-bar/intro/","title":"Live Progress Bar","description":"Learn how to create a Live Progress Bar using deepstream","leaf":true,"order":0,"":{"order":100}},"prerequistes":{"slug":"/guides/live-progress-bar/prerequistes/","title":"Prerequisite","description":"Step one: What you need to know before starting this guide","leaf":true,"order":10,"":{"order":100}},"setting-up-the-backend":{"slug":"/guides/live-progress-bar/setting-up-the-backend/","title":"Setting up the backend","description":"Step two: Starting the backend service","leaf":true,"order":20,"":{"order":100}},"login":{"slug":"/guides/live-progress-bar/login/","title":"Logging in to deepstream","description":"Step three: How to login to the server using HTTP auth","leaf":true,"order":25,"":{"order":100}},"server-events":{"slug":"/guides/live-progress-bar/server-events/","title":"Emitting events","description":"Step three: Emitting events as the post progresses","leaf":true,"order":30,"":{"order":100}},"visualizing-in-the-frontend":{"slug":"/guides/live-progress-bar/visualizing-in-the-frontend/","title":"Visualizing in the frontend","description":"Step three: Visualizing in the frontend","leaf":true,"order":40,"":{"order":100}},"permissions":{"slug":"/guides/live-progress-bar/permissions/","title":"Permissions","description":"Step three: Restricting who can emit events","leaf":true,"order":50,"":{"order":100}},"conclusion":{"slug":"/guides/live-progress-bar/conclusion/","title":"Summary and extra tasks","description":"Step seven: Conclusion","leaf":true,"order":90,"":{"order":100}}},"post-it-board":{"order":100,"intro":{"slug":"/guides/post-it-board/intro/","title":"Collaborative Post-It Board","description":"Creating a Retrospective Board with deepstream","leaf":true,"order":0,"":{"order":100}},"prerequisites":{"slug":"/guides/post-it-board/prerequisites/","title":"Prerequisite","description":"Step one: What you need to know before starting this guide","leaf":true,"order":10,"":{"order":100}},"setting-up-the-backend":{"slug":"/guides/post-it-board/setting-up-the-backend/","title":"Setting up the postit backend","description":"Step two: Starting the postit services","leaf":true,"order":15,"":{"order":100}},"login":{"slug":"/guides/post-it-board/login/","title":"Logging in to your boards","description":"Step three: How to login to the server using storage auth","leaf":true,"order":20,"":{"order":100}},"the-postits":{"slug":"/guides/post-it-board/the-postits/","title":"Creating postits","description":"Step four: Creating a postit","leaf":true,"order":30,"":{"order":100}},"the-board":{"slug":"/guides/post-it-board/the-board/","title":"Grouping Post-Its Together","description":"Step five: Grouping Post-Its","leaf":true,"order":40,"":{"order":100}},"permissions":{"slug":"/guides/post-it-board/permissions/","title":"Permissioning it all","description":"Step six: Adding some permissions","leaf":true,"order":50,"":{"order":100}},"conclusion":{"slug":"/guides/post-it-board/conclusion/","title":"Summary and extra tasks","description":"Step seven: Conclusion","leaf":true,"order":90,"":{"order":100}}},"realtime-search":{"order":100,"intro":{"slug":"/guides/realtime-search/intro/","title":"Announcing new Realtime Search!","description":"Learn how to use realtime-search with deepstream","leaf":true,"order":0,"":{"order":100}},"prerequisites":{"slug":"/guides/realtime-search/prerequisites/","title":"Prerequisite","description":"What you need to know before starting this guide","leaf":true,"order":10,"":{"order":100}},"setting-up-the-backend":{"slug":"/guides/realtime-search/setting-up-the-backend/","title":"Setting up the backend","description":"Starting the backend services","leaf":true,"order":20,"":{"order":100}},"logging-in":{"slug":"/guides/realtime-search/logging-in/","title":"Logging in","description":"Logging into deepstream","leaf":true,"order":25,"":{"order":100}},"doing-a-realtime-search":{"slug":"/guides/realtime-search/doing-a-realtime-search/","title":"Realtime Search","description":"Doing a realtime search","leaf":true,"order":30,"":{"order":100}},"permissions":{"slug":"/guides/realtime-search/permissions/","title":"Permissions","description":"Step three: Restricting who can emit events","leaf":true,"order":50,"":{"order":100}},"conclusion":{"slug":"/guides/realtime-search/conclusion/","title":"Summary and extra tasks","description":"Step seven: Conclusion","leaf":true,"order":60,"":{"order":100}}}}}}}